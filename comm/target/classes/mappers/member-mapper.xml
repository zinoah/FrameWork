<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper"> 
	<!-- mapper 파일 생성 시 반드시 해야되는 것!
		1.cache-ref 태그 삭제
		2.mapper 태그에 namespace 속성 추가
			-> namespace : 해당 파일을 쉽게 부르는 이름(DAO에서 사용)
	 -->
	 
	 <!-- 수행하려는 SQL에 따라서 태그가 구분됨(사용 가능한 속성도 다름) 
	 	<select></select>
	 	<insert></insert>
	 	<update></update>
	 	<delete></delete>
	 -->
	 
	 <!-- 1. select 태그 속성
	 	1)resultType : 조회 결과가 1행 1열인경우에만 작성
	 				   조회된 데이터의 JAVA 자료형을 Mybatis별칭 형태로 작성
	 				   
	 		[mybatis 별칭]
	 		java		:		mybatis
	 		
	 		int			:		_int
	 		Integer     :		int
	 		String		:		string (java.lang.String) 
	 
	 
	  -->
	 
	 
	 <!-- 조회되는 행의 개수 : 1행 / 조회되는 데이터의 타입 : int형 -->
	 <select id="test1" resultType="_int">
	 	SELECT COUNT(*) FROM MEMBER
	 </select>
	 
	 <!-- (중요)
	 	마이바티스에서 #{}, ${} 차이점
	 	
	 	#{변수명} : SQL에 값이 포함될 때 양쪽에 '' 추가됨 
	 				-> 리터럴 사용(값 자체로 사용)
	 				
	 	${변수명} : SQL에 값이 포함될 때 양쪽에 '' 추가되지 않음 (stmt)
	 				-> SQL 구문 조합 시 사용(condition)
	  -->
	 
	 <!-- 조회되는 행의 개수 : 1행 / 파라미터 타입 : String / 조회되는 데이터 타입 : String -->
	 <select id="test2" parameterType="string" resultType="string">
	 	SELECT MEMBER_NICK FROM MEMBER
	 	WHERE MEMBER_EMAIL = #{memberEmail}
	 	AND SECESSION_FL = 'N'
	 </select>
	 
	 <!-- 조회되는 행의 개수 : 1행 
		  파라미터 타입: edu.kh.comm.member.model.vo.Member
		  조회되는 타입 : string
		  
		  파라미터로 VO가 전달된 경우 
		  1) 패키지명 + 클래스명을 모두 작성해야 한다 
		  2) mapper에서 VO에 저장된 값을 얻어와 사용할 경우 #{필드명}을 사용한다.
		  	단, VO에 반드시 getter가 있어야한다
	 -->
	 
	 <select id="test3" parameterType="edu.kh.comm.member.model.vo.Member" resultType="string">
	 	SELECT MEMBER_TEL FROM MEMBER_S
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_PW = #{memberPw}
		AND SECESSION_FL = 'N'
	 </select>
</mapper>
